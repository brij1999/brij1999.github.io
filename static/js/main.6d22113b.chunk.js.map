{"version":3,"sources":["assets/landing_planet.png","React Components/Layout/Landing/Landing.jsx","React Components/Layout/Experience/Experience.jsx","React Components/Layout/RocketLoader/RocketLoader.jsx","React Components/Pages/Home/Home.jsx","React Components/Pages/About/About.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Landing","props","state","scrollHandler","bind","window","addEventListener","this","text","document","querySelector","planet_wrapper","scrollPos","pageYOffset","scrollHt","innerHeight","dec_dim","inc_dim","planet_height","Math","max","style","transform","height","bottom","visibility","className","src","planet","alt","Component","withRouter","Experience","colors","setCardProperties","card_pictures","querySelectorAll","i","length","backgroundImage","experience","resources","link","card_backs","card_headings","background","experienceCards","map","item","index","key","title","href","RocketLoader","width","cx","cy","r","points","Home","showLoader","showPage","setTimeout","setState","id","TransitionGroup","component","CSSTransition","in","classNames","timeout","About","App","basename","process","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d22113b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing_planet.572ff030.png\";","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport './landing.scss';\r\nimport planet from '../../../assets/landing_planet.png';\r\n\r\nclass Landing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler() {\r\n        const text = document.querySelector('.landing');\r\n        const planet_wrapper = document.querySelector('.landing--planet');\r\n        const planet = document.querySelector('.landing--planet--img');\r\n        const scrollPos = window.pageYOffset;\r\n        const scrollHt = window.innerHeight;\r\n        \r\n        const dec_dim = (scrollHt - scrollPos) / scrollHt;\r\n        const inc_dim = (scrollHt + scrollPos) / scrollHt;\r\n        const planet_height = (scrollHt + scrollPos) * (Math.max(0.5, inc_dim)) * 0.5;\r\n        text.style.transform = `translateY(${scrollPos*0.55}px) scale(${dec_dim})`;\r\n        planet_wrapper.style.height = `${planet_height}px`;\r\n        planet_wrapper.style.transform = `scale(${dec_dim*0.75})`;\r\n        planet_wrapper.style.bottom = `-2rem`;\r\n        \r\n        if(scrollPos>scrollHt) {\r\n            document.querySelector('.landing--wrapper').style.visibility = 'hidden';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='landing--wrapper'>\r\n                <div className='landing--planet'>\r\n                    <img src={planet} alt='' className='landing--planet--img' />\r\n                </div>\r\n                <div className='landing'>\r\n                    <div className='landing__primary'>Brijgopal Bharadwaj</div>\r\n                    <div className='landing__typer'>\r\n                        <div className='landing__typer--line1'>\r\n                            A passionate web developer, who loves\r\n                        </div>\r\n                        <div className='landing__typer--line2'>\r\n                            deep-diving in the concepts of data-science,\r\n                        </div>\r\n                        <div className='landing__typer--line3'>\r\n                            and knows his way around the realm of IoT...\r\n                        </div>\r\n                    </div>\r\n                    <div className='landing__btn-grp'>\r\n                        <div className='landing__btn'>Get in Touch!</div>\r\n                        <div className='landing__btn'>Download Resume</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n\r\n\r\n/* <div className='landing__name'>Hey! I'm Brij....</div>\r\n<div className='landing__typer'>\r\n    <div className='landing__typer--line1'>\r\n        A passionate web developer, who loves\r\n    </div>\r\n    <div className='landing__typer--line2'>\r\n        deep-diving in the realm of data-science,\r\n    </div>\r\n    <div className='landing__typer--line3'>\r\n        and knows his way around the piano keys... :)\r\n    </div>\r\n</div>\r\n<div className='landing__btn-grp'>\r\n    <div className='landing__btn'>\r\n        <div className='landing__btn--text'>Contact</div>\r\n    </div>\r\n    <div className='landing__btn'>\r\n        <div className='landing__btn--text'>Resume</div>\r\n    </div>\r\n</div> */","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { experience } from '../../../db/experience.json';\r\nimport './experience.scss';\r\n\r\nclass Experience extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.colors = [\r\n            ['#7ed56f', '#28b485'],\r\n            ['#ffb900', '#ff7730'],\r\n            ['#2998ff', '#5643fa'],\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCardProperties();\r\n    }\r\n\r\n    setCardProperties() {\r\n        const card_pictures = document.querySelectorAll('.experience__card__picture');\r\n        for (let i = 0; i < card_pictures.length; i++) {\r\n            card_pictures[i].style.backgroundImage = `linear-gradient(\r\n                        to right bottom,\r\n                        ${this.colors[i][0]},\r\n                        ${this.colors[i][1]}\r\n                    ),\r\n                    url(${experience[i].resources[0].link})`;\r\n        }\r\n\r\n        const card_backs = document.querySelectorAll('.experience__card__side--back');\r\n        for (let i = 0; i < card_backs.length; i++) {\r\n            card_backs[i].style.backgroundImage = `linear-gradient(\r\n                        to right bottom,\r\n                        ${this.colors[i][0]},\r\n                        ${this.colors[i][1]}\r\n                    )`;\r\n        }\r\n\r\n        const card_headings = document.querySelectorAll('.experience__card__heading-span');\r\n        for (let i = 0; i < card_headings.length; i++) {\r\n            card_headings[i].style.background = `linear-gradient(\r\n                        to right bottom,\r\n                        ${this.colors[i][0]}d9,\r\n                        ${this.colors[i][1]}d9\r\n                    )`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const experienceCards = experience.map((item, index) => (\r\n            <div className='experience__card' key={`exp${index}`}>\r\n                <div className='experience__card__side experience__card__side--front'>\r\n                    <div className='experience__card__picture'>&nbsp;</div>\r\n                    <h4 className='experience__card__heading'>\r\n                        <span className='experience__card__heading-span'>{item.title}</span>\r\n                    </h4>\r\n                    <div className='experience__card__details'>\r\n                        <ul>\r\n                            <li>3 day tours</li>\r\n                            <li>Up to 30 people</li>\r\n                            <li>2 tour guides</li>\r\n                            <li>Sleep in cozy hotels</li>\r\n                            <li>Difficulty: easy</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className='experience__card__side experience__card__side--back'>\r\n                    <div className='experience__card__cta'>\r\n                        <div className='experience__card__price-box'>\r\n                            <p className='experience__card__price-only'>Only</p>\r\n                            <p className='experience__card__price-value'>$297</p>\r\n                        </div>\r\n                        <a href='#popup' className='btn btn--white'>\r\n                            Book now!\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n        return (\r\n            <div className='experience--wrapper'>\r\n                <div className='experience--planet'></div>\r\n                <div className='experience'>\r\n                    <div className=\"experience__heading\">Experience</div>\r\n                    <div className='experience__card--wrapper'>{experienceCards}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Experience);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './rocket_loader.scss';\r\n\r\nclass RocketLoader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='loader--container'>\r\n                <div className='rocketloader--wrapper'>\r\n                    <span className='rocketloader'>\r\n                        <span className='rocketloader__rocket'>\r\n                            <svg width='164' height='164'>\r\n                                <circle\r\n                                    className='rocketloader__circle'\r\n                                    cx='78'\r\n                                    cy='82'\r\n                                    r='77'\r\n                                    transform='rotate(-90, 80, 80)'\r\n                                />\r\n                            </svg>\r\n                            <i className='rocketloader__icon'>\r\n                                <svg className='rocketloader__svg'>\r\n                                    <polygon points='21 26.24 15.15 21.04 15.15 6.22 10.51 0 5.86 6.22 5.86 17.46 5.85 21.04 0 26.24 0 36 5.86 30.79 5.86 32.39 10.51 32.39 15.15 32.39 15.15 30.8 21 36 21 26.24' />\r\n                                </svg>\r\n                            </i>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div className='eisenfoxLoader--wrapper'>\r\n                    <div className='eisenfoxLoader eisenfoxLoader-2'></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(RocketLoader);","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './home.scss';\r\nimport Landing from '../../Layout/Landing/Landing';\r\nimport Experience from '../../Layout/Experience/Experience';\r\nimport RocketLoader from '../../Layout/RocketLoader/RocketLoader';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLoader: false,\r\n            showPage: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({ showLoader: false, showPage: true });\r\n        }, 5000);\r\n        this.setState({ showLoader: true });\r\n        // this.setState({ showLoader: false, showPage: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='home--bg'>\r\n                    <div id='stars'></div>\r\n                    <div id='stars2'></div>\r\n                    <div id='stars3'></div>\r\n                </div>\r\n\r\n                <TransitionGroup component={null}>\r\n                    {this.state.showLoader && (\r\n                        <CSSTransition\r\n                            in={this.state.showLoader}\r\n                            classNames='rocketloader'\r\n                            timeout={3000}>\r\n                            <RocketLoader />\r\n                        </CSSTransition>\r\n                    )}\r\n                </TransitionGroup>\r\n                <TransitionGroup component={null}>\r\n                    {this.state.showPage && (\r\n                        <CSSTransition in={this.state.showPage} classNames='home' timeout={5000}>\r\n                            <div className='home'>\r\n                                <Landing />\r\n                                <Experience />\r\n                            </div>\r\n                        </CSSTransition>\r\n                    )}\r\n                </TransitionGroup>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport './about.scss';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className='about'>\r\n                Welcome to About\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(About);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './React Components/Pages/Home/Home';\r\nimport About from './React Components/Pages/About/About';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/about' component={About} />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}